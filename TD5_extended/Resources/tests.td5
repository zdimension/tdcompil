/*type square_impl = struct { };
impl square_impl
{
	func `(`(x: u16): u16
	{
		return x * x;
	}
}

func square(x: u16): u16
{
    return x * x;
}

func applier<T>(x: u16): u16
{
    return T(x);
}

print applier!<square_impl>(5);

var x[] = "bonjour", y;
for (var ptr = x; ptr != &y; ptr++)
{
	*ptr -= 32;
}
puts(x);*/


disp!<u8>(25);