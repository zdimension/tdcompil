# disp        <generic type>
# even_filter  <generic type>
# fibo_iter   struct { a: u8; b: u8; }
# dbl         u16       
# Types
# NAME        VALUE
NEW "generated" 4		# line 1767
START @INIT		# line 1768
END @END "END"		# line 1769
END @DEFAULT "default option"		# line 1770
FROM @INIT		# line 1772
'_,'_,'_,'_ '[,'[,'_,'. S,S,S,R @1		# line 1773
#	------ BEGIN: program
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	type
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	impl
#	; second
#	** begin
#	** end
# KIND = 4 (k_scope)		# line 504
# Memory map
# POSITION  SIZE  NAME        TYPE
#        0     2  iter        fibo_iter 
#        2     1  iter2       even_filter<fibo_iter>
FROM @1		# line 191
'/|'0|'1|'[,'[,'_,'_ R,S,S,S		# line 192
'/|'0|'1|'[,'/,'_,'_ R,S,S,S		# line 193
'_,'/|'[,'_,'_ S,R,S,S @2		# line 194
# allocate variable iter (position 0, size 2)		# line 67
#	composite type, allocating fields:
# allocate variable a (position 0, size 1)		# line 67
FROM @2		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @3		# line 120
FROM @3		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @4		# line 120
FROM @4		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @5		# line 120
FROM @5		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @6		# line 120
FROM @6		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @7		# line 120
FROM @7		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @8		# line 120
FROM @8		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @9		# line 120
FROM @9		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @10		# line 120
FROM @10		# line 122
'_,'_,'_,'_ '/,'_,'_,'_ R,S,S,S @11		# line 123
# allocate variable b (position 1, size 1)		# line 67
FROM @11		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @12		# line 120
FROM @12		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @13		# line 120
FROM @13		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @14		# line 120
FROM @14		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @15		# line 120
FROM @15		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @16		# line 120
FROM @16		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @17		# line 120
FROM @17		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @18		# line 120
FROM @18		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @19		# line 120
FROM @19		# line 122
'_,'_,'_,'_ '/,'_,'_,'_ R,S,S,S @20		# line 123
# allocate variable iter2 (position 2, size 1)		# line 67
FROM @20		# line 77
'_|'0|'1|'/,'_,'_,'_ L,S,S,S		# line 78
'[,'_,'_,'_ S,L,S,S @21		# line 79
#	** begin
#	** end
# KIND = 4 (k_scope)		# line 504
# Memory map
# POSITION  SIZE  NAME        TYPE
#        0     1  $           even_filter<fibo_iter>
FROM @21		# line 191
'/|'0|'1|'[,'[,'_,'_ R,S,S,S		# line 192
'/|'0|'1|'[,'/,'_,'_ R,S,S,S		# line 193
'_,'/|'[,'_,'_ S,R,S,S @22		# line 194
# allocate variable $ (position 0, size 1)		# line 67
#	composite type, allocating fields:
# allocate variable base_iter (position 0, size 1)		# line 67
FROM @22		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @23		# line 120
FROM @23		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @24		# line 120
FROM @24		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @25		# line 120
FROM @25		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @26		# line 120
FROM @26		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @27		# line 120
FROM @27		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @28		# line 120
FROM @28		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @29		# line 120
FROM @29		# line 119
'_,'_,'_,'_ '0,'_,'_,'_ R,S,S,S @30		# line 120
FROM @30		# line 122
'_,'_,'_,'_ '/,'_,'_,'_ R,S,S,S @31		# line 123
FROM @31		# line 199
'_|'/|'0|'1,'_,'_,'_ L,S,S,S		# line 200
'[,'_,'_,'_ S,L,S,S @32		# line 201
#	; entering scope
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; compound expression statement
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	var
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	empty node
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	store
#	evaluating right-hand value
#	** begin
#	** end
# KIND = 1 (k_number)		# line 504
#	push	0
FROM @32		# line 394
'/|'[,'[,'_,'_ S,R,S,S @33		# line 395
'/|'[,'/,'_,'_ S,R,S,S @33		# line 396
FROM @33		# line 397
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @34		# line 400
FROM @34		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @35		# line 400
FROM @35		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @36		# line 400
FROM @36		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @37		# line 400
FROM @37		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @38		# line 400
FROM @38		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @39		# line 400
FROM @39		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @40		# line 400
FROM @40		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @41		# line 400
FROM @41		# line 401
'/|'[,'_,'_,'_ '/|'[,'/,'_,'_ S,S,S,S @42		# line 403
FROM @42		# line 1364
'0|'1|'/,'/,'_,'_ L,S,S,S		# line 1365
'[,'/,'_,'_ S,S,S,S @43		# line 1366
# navigating to 2		# line 339
FROM @43		# line 344
'/|'[,'/,'_,'_ R,S,S,S @44		# line 345
'/|'[,'[,'_,'_ R,S,S,S @44		# line 346
FROM @44		# line 347
'0|'1,'/,'_,'_ R,S,S,S		# line 348
'0|'1,'[,'_,'_ R,S,S,S		# line 349
'/,'/|'[,'_,'_ S,S,S,S @45		# line 350
FROM @45		# line 344
'/|'[,'/,'_,'_ R,S,S,S @46		# line 345
'/|'[,'[,'_,'_ R,S,S,S @46		# line 346
FROM @46		# line 347
'0|'1,'/,'_,'_ R,S,S,S		# line 348
'0|'1,'[,'_,'_ R,S,S,S		# line 349
'/,'/|'[,'_,'_ S,S,S,S @47		# line 350
#	navigating to left of stack head
FROM @47		# line 1369
'/|'[,'/,'_,'_ S,L,S,S @48		# line 1370
FROM @48		# line 1379
'/,'0|'1,'_,'_ S,L,S,S		# line 1380
'[,'0|'1,'_,'_ S,L,S,S		# line 1381
'/,'/|'[,'_,'_ R,R,S,S @49		# line 1382
'[,'/|'[,'_,'_ R,R,S,S @49		# line 1383
FROM @49		# line 1395
'0|'1,'0,'_,'_ '0,'_,'_,'_ R,R,S,S		# line 1396
'0|'1,'1,'_,'_ '1,'_,'_,'_ R,R,S,S		# line 1397
'0|'1,'/,'_,'_ '0,'/,'_,'_ R,S,S,S		# line 1398
'/,'0|'1,'_,'_ '/,'_,'_,'_ S,R,S,S		# line 1399
'/,'/,'_,'_ '/,'_,'_,'_ L,L,S,S @50		# line 1400
FROM @50		# line 1401
'/|'0|'1|'[,'_,'_,'_ L,L,S,S		# line 1402
'/|'0|'1|'[,'/,'_,'_ S,S,S,S @51		# line 1403
'/|'0|'1|'[,'[,'_,'_ S,S,S,S @51		# line 1404
#	nav back local
FROM @51		# line 296
'0|'1|'/,'/,'_,'_ L,S,S,S		# line 297
'0|'1|'/,'[,'_,'_ L,S,S,S		# line 298
'[,'/|'[,'_,'_ S,S,S,S @52		# line 299
#	; second
#	empty node
#	; compound expression result
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	deref
# navigating to 2		# line 339
FROM @52		# line 344
'/|'[,'/,'_,'_ R,S,S,S @53		# line 345
'/|'[,'[,'_,'_ R,S,S,S @53		# line 346
FROM @53		# line 347
'0|'1,'/,'_,'_ R,S,S,S		# line 348
'0|'1,'[,'_,'_ R,S,S,S		# line 349
'/,'/|'[,'_,'_ S,S,S,S @54		# line 350
FROM @54		# line 344
'/|'[,'/,'_,'_ R,S,S,S @55		# line 345
'/|'[,'[,'_,'_ R,S,S,S @55		# line 346
FROM @55		# line 347
'0|'1,'/,'_,'_ R,S,S,S		# line 348
'0|'1,'[,'_,'_ R,S,S,S		# line 349
'/,'/|'[,'_,'_ S,S,S,S @56		# line 350
FROM @56		# line 580
'/|'[,'/,'_,'_ R,R,S,S @57		# line 581
'/|'[,'[,'_,'_ R,R,S,S @57		# line 582
FROM @57		# line 590
'0|'1,'_,'_,'_ '0|'1,'0|'1,'_,'_ R,R,S,S		# line 591
'/,'_,'_,'_ '/,'/,'_,'_ L,S,S,S @58		# line 592
#	nav back local
FROM @58		# line 296
'0|'1|'/,'/,'_,'_ L,S,S,S		# line 297
'0|'1|'/,'[,'_,'_ L,S,S,S		# line 298
'[,'/|'[,'_,'_ S,S,S,S @59		# line 299
#	; exiting scope
FROM @59		# line 211
'/|'0|'1|'[,'[,'_,'_ R,R,S,S		# line 212
'/|'0|'1|'[,'/,'_,'_ R,R,S,S		# line 213
'/|'0|'1|'[,'_,'_,'_ R,S,S,S		# line 214
'_,'_,'_,'_ L,S,S,S @60		# line 215
FROM @60		# line 224
'/|'0|'1,'_,'_,'_ '_,'_,'_,'_ L,S,S,S @61		# line 225
FROM @61		# line 226
'0|'1,'_,'_,'_ '_,'_,'_,'_ L,S,S,S		# line 227
'/,'_,'_,'_ L,S,S,S @62		# line 228
'[,'_,'_,'_ S,L,S,S @63		# line 229
FROM @62		# line 230
'/|'0|'1,'_,'_,'_ L,S,S,S		# line 231
'[,'_,'_,'_ S,L,S,S @63		# line 232
#	navigating to initializating var
# navigating to 2		# line 339
FROM @63		# line 344
'/|'[,'/,'_,'_ R,S,S,S @64		# line 345
'/|'[,'[,'_,'_ R,S,S,S @64		# line 346
FROM @64		# line 347
'0|'1,'/,'_,'_ R,S,S,S		# line 348
'0|'1,'[,'_,'_ R,S,S,S		# line 349
'/,'/|'[,'_,'_ S,S,S,S @65		# line 350
FROM @65		# line 344
'/|'[,'/,'_,'_ R,S,S,S @66		# line 345
'/|'[,'[,'_,'_ R,S,S,S @66		# line 346
FROM @66		# line 347
'0|'1,'/,'_,'_ R,S,S,S		# line 348
'0|'1,'[,'_,'_ R,S,S,S		# line 349
'/,'/|'[,'_,'_ S,S,S,S @67		# line 350
#	navigating to left of stack head
FROM @67		# line 86
'/|'[,'/,'_,'_ S,L,S,S @68		# line 87
FROM @68		# line 96
'/,'0|'1,'_,'_ S,L,S,S		# line 97
'[,'0|'1,'_,'_ S,L,S,S		# line 98
'/,'/|'[,'_,'_ R,R,S,S @69		# line 99
'[,'/|'[,'_,'_ R,R,S,S @69		# line 100
FROM @69		# line 101
'_,'0|'1|'/,'_,'_ '0|'1|'/,'_,'_,'_ R,R,S,S		# line 102
'_,'_,'_,'_ S,L,S,S @70		# line 103
FROM @70		# line 104
'_,'_,'_,'_ S,L,S,S		# line 105
'_,'/|'[,'_,'_ S,R,S,S @71		# line 106
FROM @71		# line 199
'_|'/|'0|'1,'_,'_,'_ L,S,S,S		# line 200
'[,'_,'_,'_ S,L,S,S @72		# line 201
#	; entering scope
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	; first
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	type
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	impl
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	type
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	impl
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	var
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
# call init		# line 1493
#	** begin
#	** end
# KIND = 1 (k_number)		# line 504
#	push	0
FROM @72		# line 394
'/|'[,'[,'_,'_ S,R,S,S @73		# line 395
'/|'[,'/,'_,'_ S,R,S,S @73		# line 396
FROM @73		# line 397
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @74		# line 400
FROM @74		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @75		# line 400
FROM @75		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @76		# line 400
FROM @76		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @77		# line 400
FROM @77		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @78		# line 400
FROM @78		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @79		# line 400
FROM @79		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @80		# line 400
FROM @80		# line 401
'/|'[,'_,'_,'_ '/|'[,'0,'_,'_ S,R,S,S @81		# line 400
FROM @81		# line 401
'/|'[,'_,'_,'_ '/|'[,'/,'_,'_ S,S,S,S @82		# line 403
#	go to left of args on stack
FROM @82		# line 1547
'[,'/,'_,'_ S,L,S,S @84		# line 1548
'[,'[,'_,'_ S,S,S,S @83		# line 1549
FROM @84		# line 1556
'[,'0|'1,'_,'_ S,L,S,S		# line 1557
'[,'/|'[,'_,'_ S,S,S,S @83		# line 1558
#	go to right of heap
FROM @83		# line 1565
'/|'0|'1|'[,'/,'_,'_ R,S,S,S		# line 1566
'/|'0|'1|'[,'[,'_,'_ R,S,S,S		# line 1567
'_,'/|'[,'_,'_ '[,'/|'[,'_,'_ R,S,S,S @F2C0		# line 1569
#	start copying args from stack to heap
FROM @85		# line 1574
'_,'/|'[,'_,'_ '[,'/|'[,'_,'_ R,R,S,S @86		# line 1575
FROM @86		# line 1576
'_,'0|'1,'_,'_ '0|'1,'_,'_,'_ R,R,S,S		# line 1577
'_,'/,'_,'_ '/,'_,'_,'_ R,R,S,S		# line 1578
'_,'_,'_,'_ L,L,S,S @87		# line 1579
FROM @87		# line 1581
'/|'0|'1,'_,'_,'_ L,L,S,S		# line 1582
'/|'0|'1,'/,'_,'_ L,S,S,S		# line 1583
'/|'0|'1,'[,'_,'_ L,S,S,S		# line 1584
'[,'/|'[,'_,'_ S,S,S,S @F2		# line 1585
'_,'/|'[,'_,'_ '[,'/|'[,'_,'_ S,S,S,S @F2		# line 1586
#	; second
#	** begin
#	** end
# KIND = 2 (k_operator)		# line 504
#	var
#	; second
#	** begin
#	** end
# KIND = 4 (k_scope)		# line 504
#	; entering scope
#	** begin
#	** end
# KIND = 4 (k_scope)		# line 504
# Memory map
# POSITION  SIZE  NAME        TYPE
#        0     1  val         u8        
FROM @88		# line 191
'/|'0|'1|'[,'[,'_,'_ R,S,S,S		# line 192
'/|'0|'1|'[,'/,'_,'_ R,S,S,S		# line 193
'_,'/|'[,'_,'_ S,R,S,S @89		# line 194
# allocate variable val (position 0, size 1)		# line 67
FROM @89		# line 119
'_,'_,'_,'_ 